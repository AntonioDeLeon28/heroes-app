{"ast":null,"code":"var _jsxFileName = \"/Users/luisantoniodeleonsamano/Desktop/Cursos/React/07-heroes-app/src/components/search/SearchScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport queryString from 'query-string'; // Es una biblioteca que nos ayuda a procesar el path y segmentarlo, primero en la consola instalno com \" yarn add query-string\"\n\nimport { useForm } from '../../hooks/useForm';\nimport { HeroScreen } from '../hero/HeroScreen';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\nimport { HeroCard } from '../hero/HeroCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchScreen = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation(); // Es un hook de react router que nos brinda informaci贸n como el path actual\n  // console.log(location);\n\n  const {\n    q = ''\n  } = queryString.parse(location.search);\n  const heroes = getHeroesByName(q);\n  const {\n    searchText,\n    handleInputChange\n  } = useForm({\n    searchText: q\n  });\n\n  const onSearchSubmit = e => {\n    e.preventDefault();\n    if (searchText.trim().length <= 1) return; // navigate(``); // Esto indica una navegaci贸n al mismo lugar donde nos escontramos parados\n\n    navigate(`?q=${searchText}`); // Agregamos un poco al path\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Search Screen \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" Searching \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSearchSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search a hero\",\n            className: \"form-control\",\n            name: \"searchText\",\n            autoComplete: \"off\",\n            value: searchText,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary mt-1\",\n            children: \" Search \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-7\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" Results \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-primary\",\n          children: \" Search a hero \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: [\" There're no results with \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\" \", q, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 83\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), heroes.map(hero => /*#__PURE__*/_jsxDEV(HeroCard, { ...hero\n        }, hero.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchScreen, \"ZRrCIEjsoEiBCVPXX1IgqjRnUrI=\", false, function () {\n  return [useNavigate, useLocation, useForm];\n});\n\n_c = SearchScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchScreen\");","map":{"version":3,"names":["React","useLocation","useNavigate","queryString","useForm","HeroScreen","getHeroesByName","HeroCard","SearchScreen","navigate","location","q","parse","search","heroes","searchText","handleInputChange","onSearchSubmit","e","preventDefault","trim","length","map","hero","id"],"sources":["/Users/luisantoniodeleonsamano/Desktop/Cursos/React/07-heroes-app/src/components/search/SearchScreen.jsx"],"sourcesContent":["import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport queryString from 'query-string'; // Es una biblioteca que nos ayuda a procesar el path y segmentarlo, primero en la consola instalno com \" yarn add query-string\"\nimport { useForm } from '../../hooks/useForm';\nimport { HeroScreen } from '../hero/HeroScreen';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\nimport { HeroCard } from '../hero/HeroCard';\n\nexport const SearchScreen = () => {\n\n    const navigate = useNavigate();\n    const location = useLocation(); // Es un hook de react router que nos brinda informaci贸n como el path actual\n    // console.log(location);\n    const { q = '' } = queryString.parse(location.search);\n\n    const heroes = getHeroesByName(q);\n\n    const { searchText, handleInputChange } = useForm({ searchText: q });\n\n    const onSearchSubmit = (e) => {\n        e.preventDefault();\n        if (searchText.trim().length <= 1) return;\n        // navigate(``); // Esto indica una navegaci贸n al mismo lugar donde nos escontramos parados\n        navigate(`?q=${searchText}`); // Agregamos un poco al path\n    }\n\n    return (\n        <>\n\n            <h1> Search Screen </h1>\n            <hr />\n\n            <div className='row'>\n                <div className='col-5'>\n                    <h4> Searching </h4>\n                    <hr />\n                    <form onSubmit={onSearchSubmit}>\n                        <input\n                            type='text'\n                            placeholder='Search a hero'\n                            className='form-control'\n                            name='searchText'\n                            autoComplete='off'\n                            value={searchText}\n                            onChange={handleInputChange}\n                        />\n                        <button className='btn btn-outline-primary mt-1'> Search </button>\n                    </form>\n                </div>\n\n                <div className='col-7'>\n                    <h4> Results </h4>\n                    <hr />\n\n                    <div className='alert alert-primary'> Search a hero </div>\n                    <div className='alert alert-danger'> There're no results with <b> {q} </b> </div>\n                    {\n                        heroes.map(hero => (\n                            <HeroCard key={hero.id} {...hero} />\n                        ))\n                    }\n                </div>\n\n            </div>\n        </>\n\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAAwC;;AACxC,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAE9B,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAMQ,QAAQ,GAAGT,WAAW,EAA5B,CAH8B,CAGE;EAChC;;EACA,MAAM;IAAEU,CAAC,GAAG;EAAN,IAAaR,WAAW,CAACS,KAAZ,CAAkBF,QAAQ,CAACG,MAA3B,CAAnB;EAEA,MAAMC,MAAM,GAAGR,eAAe,CAACK,CAAD,CAA9B;EAEA,MAAM;IAAEI,UAAF;IAAcC;EAAd,IAAoCZ,OAAO,CAAC;IAAEW,UAAU,EAAEJ;EAAd,CAAD,CAAjD;;EAEA,MAAMM,cAAc,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;IACA,IAAIJ,UAAU,CAACK,IAAX,GAAkBC,MAAlB,IAA4B,CAAhC,EAAmC,OAFT,CAG1B;;IACAZ,QAAQ,CAAE,MAAKM,UAAW,EAAlB,CAAR,CAJ0B,CAII;EACjC,CALD;;EAOA,oBACI;IAAA,wBAEI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA;MAAA;MAAA;IAAA,QAHJ,eAKI;MAAK,SAAS,EAAC,KAAf;MAAA,wBACI;QAAK,SAAS,EAAC,OAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAM,QAAQ,EAAEE,cAAhB;UAAA,wBACI;YACI,IAAI,EAAC,MADT;YAEI,WAAW,EAAC,eAFhB;YAGI,SAAS,EAAC,cAHd;YAII,IAAI,EAAC,YAJT;YAKI,YAAY,EAAC,KALjB;YAMI,KAAK,EAAEF,UANX;YAOI,QAAQ,EAAEC;UAPd;YAAA;YAAA;YAAA;UAAA,QADJ,eAUI;YAAQ,SAAS,EAAC,8BAAlB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAVJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAkBI;QAAK,SAAS,EAAC,OAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;UAAA;UAAA;QAAA,QAFJ,eAII;UAAK,SAAS,EAAC,qBAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ,eAKI;UAAK,SAAS,EAAC,oBAAf;UAAA,sDAA8D;YAAA,gBAAKL,CAAL;UAAA;YAAA;YAAA;YAAA;UAAA,QAA9D;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ,EAOQG,MAAM,CAACQ,GAAP,CAAWC,IAAI,iBACX,QAAC,QAAD,OAA4BA;QAA5B,GAAeA,IAAI,CAACC,EAApB;UAAA;UAAA;UAAA;QAAA,QADJ,CAPR;MAAA;QAAA;QAAA;QAAA;MAAA,QAlBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA,gBADJ;AAyCH,CA3DM;;GAAMhB,Y;UAEQN,W,EACAD,W,EAMyBG,O;;;KATjCI,Y"},"metadata":{},"sourceType":"module"}